//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entrada.Editor.ADTSearchServicesClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.entradahealth.com/", ConfigurationName="ADTSearchServicesClient.IADTSearchServices")]
    public interface IADTSearchServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IEntradaService/Authenticate", ReplyAction="http://ws.entradahealth.com/IEntradaService/AuthenticateResponse")]
        Entrada.Entities.EntradaUser Authenticate(Entrada.Entities.EntradaUserType userType, string userID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IEntradaService/AuthenticateASPMembership", ReplyAction="http://ws.entradahealth.com/IEntradaService/AuthenticateASPMembershipResponse")]
        Entrada.Entities.EntradaUser AuthenticateASPMembership(string userID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IEntradaService/ChangePassword", ReplyAction="http://ws.entradahealth.com/IEntradaService/ChangePasswordResponse")]
        void ChangePassword(string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IEntradaService/ChangePasswordWithUser", ReplyAction="http://ws.entradahealth.com/IEntradaService/ChangePasswordWithUserResponse")]
        void ChangePasswordWithUser(Entrada.Entities.EntradaUserType userType, string userID, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IEntradaService/IsSessionAlive", ReplyAction="http://ws.entradahealth.com/IEntradaService/IsSessionAliveResponse")]
        bool IsSessionAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IEntradaService/SignIn", ReplyAction="http://ws.entradahealth.com/IEntradaService/SignInResponse")]
        string SignIn(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IEntradaService/SetSignInToken", ReplyAction="http://ws.entradahealth.com/IEntradaService/SetSignInTokenResponse")]
        void SetSignInToken(string signInToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IEntradaService/SignOff", ReplyAction="http://ws.entradahealth.com/IEntradaService/SignOffResponse")]
        bool SignOff();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IEntradaService/UpdateASPMembershipUsers", ReplyAction="http://ws.entradahealth.com/IEntradaService/UpdateASPMembershipUsersResponse")]
        void UpdateASPMembershipUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IADTSearchServices/HasADT", ReplyAction="http://ws.entradahealth.com/IADTSearchServices/HasADTResponse")]
        bool HasADT(int clinicId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IADTSearchServices/SearchJobTypes", ReplyAction="http://ws.entradahealth.com/IADTSearchServices/SearchJobTypesResponse")]
        string[] SearchJobTypes(int clinicId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IADTSearchServices/SearchJobTypesByDictator", ReplyAction="http://ws.entradahealth.com/IADTSearchServices/SearchJobTypesByDictatorResponse")]
        string[] SearchJobTypesByDictator(int clinicId, string dictatorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IADTSearchServices/SearchPatients", ReplyAction="http://ws.entradahealth.com/IADTSearchServices/SearchPatientsResponse")]
        string SearchPatients(int clinicId, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IADTSearchServices/SearchPatientsCompact", ReplyAction="http://ws.entradahealth.com/IADTSearchServices/SearchPatientsCompactResponse")]
        string SearchPatientsCompact(int clinicId, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IADTSearchServices/SearchPhysicians", ReplyAction="http://ws.entradahealth.com/IADTSearchServices/SearchPhysiciansResponse")]
        string SearchPhysicians(int clinicId, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IADTSearchServices/SearchPhysiciansCompact", ReplyAction="http://ws.entradahealth.com/IADTSearchServices/SearchPhysiciansCompactResponse")]
        string SearchPhysiciansCompact(int clinicId, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.entradahealth.com/IADTSearchServices/SearchSchedule", ReplyAction="http://ws.entradahealth.com/IADTSearchServices/SearchScheduleResponse")]
        string SearchSchedule(int clinicId, System.DateTime appointmentDate, System.DateTime appointmentTime, string filter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IADTSearchServicesChannel : Entrada.Editor.ADTSearchServicesClient.IADTSearchServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ADTSearchServicesClient : System.ServiceModel.ClientBase<Entrada.Editor.ADTSearchServicesClient.IADTSearchServices>, Entrada.Editor.ADTSearchServicesClient.IADTSearchServices {
        
        public ADTSearchServicesClient() {
        }
        
        public ADTSearchServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ADTSearchServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ADTSearchServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ADTSearchServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Entrada.Entities.EntradaUser Authenticate(Entrada.Entities.EntradaUserType userType, string userID, string password) {
            return base.Channel.Authenticate(userType, userID, password);
        }
        
        public Entrada.Entities.EntradaUser AuthenticateASPMembership(string userID, string password) {
            return base.Channel.AuthenticateASPMembership(userID, password);
        }
        
        public void ChangePassword(string oldPassword, string newPassword) {
            base.Channel.ChangePassword(oldPassword, newPassword);
        }
        
        public void ChangePasswordWithUser(Entrada.Entities.EntradaUserType userType, string userID, string oldPassword, string newPassword) {
            base.Channel.ChangePasswordWithUser(userType, userID, oldPassword, newPassword);
        }
        
        public bool IsSessionAlive() {
            return base.Channel.IsSessionAlive();
        }
        
        public string SignIn(string userName, string password) {
            return base.Channel.SignIn(userName, password);
        }
        
        public void SetSignInToken(string signInToken) {
            base.Channel.SetSignInToken(signInToken);
        }
        
        public bool SignOff() {
            return base.Channel.SignOff();
        }
        
        public void UpdateASPMembershipUsers() {
            base.Channel.UpdateASPMembershipUsers();
        }
        
        public bool HasADT(int clinicId) {
            return base.Channel.HasADT(clinicId);
        }
        
        public string[] SearchJobTypes(int clinicId) {
            return base.Channel.SearchJobTypes(clinicId);
        }
        
        public string[] SearchJobTypesByDictator(int clinicId, string dictatorID) {
            return base.Channel.SearchJobTypesByDictator(clinicId, dictatorID);
        }
        
        public string SearchPatients(int clinicId, string filter) {
            return base.Channel.SearchPatients(clinicId, filter);
        }
        
        public string SearchPatientsCompact(int clinicId, string filter) {
            return base.Channel.SearchPatientsCompact(clinicId, filter);
        }
        
        public string SearchPhysicians(int clinicId, string filter) {
            return base.Channel.SearchPhysicians(clinicId, filter);
        }
        
        public string SearchPhysiciansCompact(int clinicId, string filter) {
            return base.Channel.SearchPhysiciansCompact(clinicId, filter);
        }
        
        public string SearchSchedule(int clinicId, System.DateTime appointmentDate, System.DateTime appointmentTime, string filter) {
            return base.Channel.SearchSchedule(clinicId, appointmentDate, appointmentTime, filter);
        }
    }
}
